// Generated by data binding compiler. Do not edit!
package br.com.jetpack.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import br.com.jetpack.R;
import br.com.jetpack.data.local.ProductModel;
import br.com.jetpack.viewmodel.ProductListViewModel;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ViewSavedItemBinding extends ViewDataBinding {
  @NonNull
  public final AppCompatTextView description;

  @NonNull
  public final AppCompatImageView imageProduct;

  @NonNull
  public final AppCompatTextView price;

  @NonNull
  public final AppCompatButton removeButton;

  @NonNull
  public final AppCompatTextView subTitle;

  @NonNull
  public final AppCompatTextView title;

  @NonNull
  public final AppCompatTextView units;

  @Bindable
  protected ProductListViewModel mViewModel;

  @Bindable
  protected ProductModel mProductModel;

  protected ViewSavedItemBinding(Object _bindingComponent, View _root, int _localFieldCount,
      AppCompatTextView description, AppCompatImageView imageProduct, AppCompatTextView price,
      AppCompatButton removeButton, AppCompatTextView subTitle, AppCompatTextView title,
      AppCompatTextView units) {
    super(_bindingComponent, _root, _localFieldCount);
    this.description = description;
    this.imageProduct = imageProduct;
    this.price = price;
    this.removeButton = removeButton;
    this.subTitle = subTitle;
    this.title = title;
    this.units = units;
  }

  public abstract void setViewModel(@Nullable ProductListViewModel viewModel);

  @Nullable
  public ProductListViewModel getViewModel() {
    return mViewModel;
  }

  public abstract void setProductModel(@Nullable ProductModel productModel);

  @Nullable
  public ProductModel getProductModel() {
    return mProductModel;
  }

  @NonNull
  public static ViewSavedItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.view_saved_item, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ViewSavedItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ViewSavedItemBinding>inflateInternal(inflater, R.layout.view_saved_item, root, attachToRoot, component);
  }

  @NonNull
  public static ViewSavedItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.view_saved_item, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ViewSavedItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ViewSavedItemBinding>inflateInternal(inflater, R.layout.view_saved_item, null, false, component);
  }

  public static ViewSavedItemBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ViewSavedItemBinding bind(@NonNull View view, @Nullable Object component) {
    return (ViewSavedItemBinding)bind(component, view, R.layout.view_saved_item);
  }
}
